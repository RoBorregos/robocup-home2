# Build Arguments
ARG UBUNTU_RELEASE_YEAR
ARG ZED_SDK_MAJOR
ARG ZED_SDK_MINOR
ARG CUDA_MAJOR
ARG CUDA_MINOR

# Specify the parent image from which we build
FROM stereolabs/zed:${ZED_SDK_MAJOR}.${ZED_SDK_MINOR}-gl-devel-cuda${CUDA_MAJOR}.${CUDA_MINOR}-ubuntu${UBUNTU_RELEASE_YEAR}.04

ARG ROS_DISTRO_ARG
ENV LOGNAME root
ENV ROS_DISTRO ${ROS_DISTRO_ARG}
ENV LANG C.UTF-8
ENV LC_ALL C.UTF-8

# Setup ROS
RUN apt-get update -y || true && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y tzdata curl && \
    sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list' && \
    curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add - && \
    apt-get update || true &&\
    DEBIAN_FRONTEND=noninteractive apt-get install -y ros-$ROS_DISTRO-desktop-full build-essential cmake usbutils libusb-1.0-0-dev git -y --allow-unauthenticated

# Install Packages depending on ROS distro
RUN if [ "$ROS_DISTRO_ARG" = "noetic" ] ; then \
    apt-get install -y python3-rosdep python3-rosinstall  python3-rosinstall-generator python3-wstool ;\
    else \
    apt-get install -y python-rosdep  python-rosinstall python-rosinstall-generator python-wstool ; \
    fi 

RUN rm -rf /var/lib/apt/lists/*

RUN mkdir -p /opt/ros_ws/src
WORKDIR /opt/ros_ws
RUN  . /opt/ros/noetic/setup.sh && \
    catkin_make 		

WORKDIR /ws
WORKDIR /ws/src

WORKDIR /ws
# setup entrypoint
COPY ./ros_entrypoint.sh /

RUN chmod +x /ros_entrypoint.sh

RUN sudo rosdep init
RUN rosdep update
RUN rosdep install --from-paths src --ignore-src -r -y

RUN echo "source /ros_entrypoint.sh" >> /root/.bashrc

# ENTRYPOINT ["source" , "/ros_entrypoint.sh"]
CMD ["bash"]